<html>
<head>
    <title>AI-Powered Personal Finance Assistant</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        .header {
            background-color: #4A90E2;
            color: #fff;
            padding: 20px;
            text-align: center;
        }
        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .section-title {
            font-size: 1.5em;
            margin-bottom: 10px;
        }
        .expense-input, .goal-input {
            display: flex;
            margin-bottom: 20px;
        }
        .expense-input input, .goal-input input {
            flex: 1;
            padding: 10px;
            margin-right: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .expense-input button, .goal-input button {
            padding: 10px 20px;
            background-color: #4A90E2;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .expense-input button:hover, .goal-input button:hover {
            background-color: #357ABD;
        }
        .expense-list, .goal-list {
            margin-top: 20px;
        }
        .expense-item, .goal-item {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            border-bottom: 1px solid #ccc;
        }
        .expense-item:last-child, .goal-item:last-child {
            border-bottom: none;
        }
        .budget-suggestions, .goal-tracking {
            margin-top: 20px;
        }
        .chart {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>AI-Powered Personal Finance Assistant</h1>
    </div>
    <div class="container">
        <div class="expense-analysis">
            <h2 class="section-title">Expense Analysis</h2>
            <div class="expense-input">
                <input type="text" id="expense-description" placeholder="Expense Description">
                <input type="number" id="expense-amount" placeholder="Amount">
                <button onclick="addExpense()">Add Expense</button>
            </div>
            <div class="expense-list" id="expense-list">
                <!-- Expense items will be added here -->
            </div>
        </div>
        <div class="budget-suggestions">
            <h2 class="section-title">Budget Suggestions</h2>
            <div id="budget-suggestions">
                <!-- Budget suggestions will be displayed here -->
            </div>
        </div>
        <div class="goal-tracking">
            <h2 class="section-title">Goal Tracking</h2>
            <div class="goal-input">
                <input type="text" id="goal-description" placeholder="Goal Description">
                <input type="number" id="goal-amount" placeholder="Amount">
                <button onclick="addGoal()">Add Goal</button>
            </div>
            <div class="goal-list" id="goal-list">
                <!-- Goal items will be added here -->
            </div>
        </div>
        <div class="chart">
            <h2 class="section-title">Expense Chart</h2>
            <canvas id="expenseChart"></canvas>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let expenses = [];
        let goals = [];

        function addExpense() {
            const description = document.getElementById('expense-description').value;
            const amount = document.getElementById('expense-amount').value;
            if (description && amount) {
                expenses.push({ description, amount: parseFloat(amount) });
                document.getElementById('expense-description').value = '';
                document.getElementById('expense-amount').value = '';
                renderExpenses();
                updateBudgetSuggestions();
                updateChart();
            }
        }

        function addGoal() {
            const description = document.getElementById('goal-description').value;
            const amount = document.getElementById('goal-amount').value;
            if (description && amount) {
                goals.push({ description, amount: parseFloat(amount) });
                document.getElementById('goal-description').value = '';
                document.getElementById('goal-amount').value = '';
                renderGoals();
            }
        }

        function renderExpenses() {
            const expenseList = document.getElementById('expense-list');
            expenseList.innerHTML = '';
            expenses.forEach((expense, index) => {
                const expenseItem = document.createElement('div');
                expenseItem.className = 'expense-item';
                expenseItem.innerHTML = `
                    <span>${expense.description}</span>
                    <span>$${expense.amount.toFixed(2)}</span>
                `;
                expenseList.appendChild(expenseItem);
            });
        }

        function renderGoals() {
            const goalList = document.getElementById('goal-list');
            goalList.innerHTML = '';
            goals.forEach((goal, index) => {
                const goalItem = document.createElement('div');
                goalItem.className = 'goal-item';
                goalItem.innerHTML = `
                    <span>${goal.description}</span>
                    <span>$${goal.amount.toFixed(2)}</span>
                `;
                goalList.appendChild(goalItem);
            });
        }

        function updateBudgetSuggestions() {
            const totalIncome = 5000; // Example income
            const totalExpenses = expenses.reduce((sum, expense) => sum + expense.amount, 0);
            const remainingBudget = totalIncome - totalExpenses;

            const budgetSuggestions = document.getElementById('budget-suggestions');
            budgetSuggestions.innerHTML = `
                <p>Total Income: $${totalIncome.toFixed(2)}</p>
                <p>Total Expenses: $${totalExpenses.toFixed(2)}</p>
                <p>Remaining Budget: $${remainingBudget.toFixed(2)}</p>
            `;
        }

        function updateChart() {
            const ctx = document.getElementById('expenseChart').getContext('2d');
            const labels = expenses.map(expense => expense.description);
            const data = expenses.map(expense => expense.amount);

            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Expenses',
                        data: data,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: true,
                            text: 'Expense Distribution'
                        }
                    }
                }
            });
        }
    </script>
</body>
</html>
